[33mcommit 34a44567b6fdad34f1eb4b6a6bcc2876c4fef4a1[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mtask_config[m[33m)[m
Author: Szymon Czajkowski <100385248+czajkowskis@users.noreply.github.com>
Date:   Tue Oct 28 17:42:04 2025 +0100

    FIX: Conversation viewer and new export functionality

[1mdiff --git a/src/features/history/components/ConversationViewer.tsx b/src/features/history/components/ConversationViewer.tsx[m
[1mnew file mode 100644[m
[1mindex 0000000..b05a9a8[m
[1m--- /dev/null[m
[1m+++ b/src/features/history/components/ConversationViewer.tsx[m
[36m@@ -0,0 +1,199 @@[m
[32m+[m[32mimport React, { useState, useEffect } from 'react';[m
[32m+[m[32mimport { useNavigate } from 'react-router-dom';[m
[32m+[m[32mimport { UploadInterface } from '../../../components/common/UploadInterface';[m
[32m+[m[32mimport { ChatView } from './ChatView';[m
[32m+[m[32mimport { Button } from '../../../components/ui/Button';[m
[32m+[m[32mimport { backendStorageService, StoredConversation } from '../../../services/backendStorageService';[m
[32m+[m
[32m+[m[32mexport const ConversationViewer: React.FC = () => {[m
[32m+[m[32m  const navigate = useNavigate();[m
[32m+[m[32m  const [conversations, setConversations] = useState<StoredConversation[]>([]);[m
[32m+[m[32m  const [selectedConversation, setSelectedConversation] = useState<StoredConversation | null>(null);[m
[32m+[m[32m  const [isUploading, setIsUploading] = useState(false);[m
[32m+[m[32m  const [uploadError, setUploadError] = useState<string | null>(null);[m
[32m+[m[32m  const [loading, setLoading] = useState(true);[m
[32m+[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    loadConversations();[m
[32m+[m[32m  }, []);[m
[32m+[m
[32m+[m[32m  const loadConversations = async () => {[m
[32m+[m[32m    try {[m
[32m+[m[32m      setLoading(true);[m
[32m+[m[32m      const importedConversations = await backendStorageService.getConversations('import');[m
[32m+[m[32m      setConversations(importedConversations);[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error('Failed to load conversations:', error);[m
[32m+[m[32m      setUploadError('Failed to load conversations');[m
[32m+[m[32m    } finally {[m
[32m+[m[32m      setLoading(false);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {[m
[32m+[m[32m    const files = event.target.files;[m
[32m+[m[32m    if (!files || files.length === 0) return;[m
[32m+[m
[32m+[m[32m    setIsUploading(true);[m
[32m+[m[32m    setUploadError(null);[m
[32m+[m
[32m+[m[32m    try {[m
[32m+[m[32m      const uploadPromises = Array.from(files).map(async (file) => {[m
[32m+[m[32m        const content = await readFileContent(file);[m
[32m+[m[32m        const conversationData = JSON.parse(content);[m
[32m+[m[41m        [m
[32m+[m[32m        // Ensure the conversation has the required structure[m
[32m+[m[32m        const conversation: StoredConversation = {[m
[32m+[m[32m          id: conversationData.id || `conversation-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,[m
[32m+[m[32m          title: conversationData.title || file.name.replace('.json', ''),[m
[32m+[m[32m          agents: conversationData.agents || [],[m
[32m+[m[32m          messages: conversationData.messages || [],[m
[32m+[m[32m          createdAt: conversationData.createdAt || new Date().toISOString(),[m
[32m+[m[32m          importedAt: new Date().toISOString(),[m
[32m+[m[32m          source: 'import'[m
[32m+[m[32m        };[m
[32m+[m
[32m+[m[32m        return backendStorageService.saveConversation(conversation);[m
[32m+[m[32m      });[m
[32m+[m
[32m+[m[32m      await Promise.all(uploadPromises);[m
[32m+[m[32m      await loadConversations(); // Reload conversations after upload[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error('Upload error:', error);[m
[32m+[m[32m      setUploadError('Failed to upload conversations. Please check the file format.');[m
[32m+[m[32m    } finally {[m
[32m+[m[32m      setIsUploading(false);[m
[32m+[m[32m    }[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const readFileContent = (file: File): Promise<string> => {[m
[32m+[m[32m    return new Promise((resolve, reject) => {[m
[32m+[m[32m      const reader = new FileReader();[m
[32m+[m[32m      reader.onload = (e) => resolve(e.target?.result as string);[m
[32m+[m[32m      reader.onerror = () => reject(new Error('Failed to read file'));[m
[32m+[m[32m      reader.readAsText(file);[m
[32m+[m[32m    });[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleViewConversation = (conversation: StoredConversation) => {[m
[32m+[m[32m    setSelectedConversation(conversation);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleBackToList = () => {[m
[32m+[m[32m    setSelectedConversation(null);[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  const handleBackToHistory = () => {[m
[32m+[m[32m    navigate('/history');[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  if (loading) {[m
[32m+[m[32m    return ([m
[32m+[m[32m      <div className="p-8 animate-fade-in">[m
[32m+[m[32m        <div className="p-6 rounded-2xl shadow-xl" style={{ backgroundColor: 'var(--color-bg-secondary)' }}>[m
[32m+[m[32m          <div className="flex items-center justify-center h-32">[m
[32m+[m[32m            <div className="text-lg" style={{ color: 'var(--color-text-secondary)' }}>Loading conversations...</div>[m
[32m+[m[32m          </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  if (selectedConversation) {[m
[32m+[m[32m    return ([m
[32m+[m[32m      <div className="p-8 animate-fade-in">[m
[32m+[m[32m        <div className="p-6 rounded-2xl shadow-xl" style={{ backgroundColor: 'var(--color-bg-secondary)' }}>[m
[32m+[m[32m          <div className="flex items-center justify-between mb-6">[m
[32m+[m[32m            <Button onClick={handleBackToList}>[m
[32m+[m[32m              ‚Üê Back to Conversations[m
[32m+[m[32m            </Button>[m
[32m+[m[32m            <Button onClick={handleBackToHistory} variant="secondary">[m
[32m+[m[32m              Back to History[m
[32m+[m[32m            </Button>[m
[32m+[m[32m          </div>[m
[32m+[m[32m          <div className="flex-1 overflow-hidden">[m
[32m+[m[32m            <ChatView[m
[32m+[m[32m              conversation={{[m
[32m+[m[32m                id: selectedConversation.id,[m
[32m+[m[32m                title: selectedConversation.title,[m
[32m+[m[32m                agents: selectedConversation.agents,[m
[32m+[m[32m                messages: selectedConversation.messages,[m
[32m+[m[32m                createdAt: selectedConversation.createdAt[m
[32m+[m[32m              }}[m
[32m+[m[32m              onBackToList={handleBackToList}[m
[32m+[m[32m              getAgentById={(agentId) => selectedConversation.agents.find((a: any) => a.id === agentId)}[m
[32m+[m[32m              getContrastColor={() => '#ffffff'}[m
[32m+[m[32m              formatTimestamp={(timestamp) => new Date(timestamp).toLocaleTimeString()}[m
[32m+[m[32m            />[m
[32m+[m[32m          </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  return ([m
[32m+[m[32m    <div className="p-8 animate-fade-in">[m
[32m+[m[32m      <div className="p-6 rounded-2xl shadow-xl" style={{ backgroundColor: 'var(--color-bg-secondary)' }}>[m
[32m+[m[32m        <div className="flex items-center justify-between mb-6">[m
[32m+[m[32m          <h1 className="text-2xl font-bold" style={{ color: 'var(--color-text-primary)' }}>Conversation Viewer</h1>[m
[32m+[m[32m          <Button onClick={handleBackToHistory} variant="secondary">[m